----------------DAY-14----------------
USE SANDY
-------PRACTISE-EXERSICE
----DML-TRIGGER
CREATE TRIGGER reminder1
ON EMPLOYEES
AFTER INSERT,UPDATE
AS RAISERROR('Do not Update and Delete',16,10);
GO

ALTER TRIGGER reminder1
ON EMPLOYEES
FOR INSERT,UPDATE
AS RAISERROR('Do not Update and Delete',16,10);
GO

SELECT * FROM Employees
UPDATE Employees
SET Salary = Salary * 2

DROP TRIGGER reminder1

ALTER TRIGGER reminder2
ON Employees
AFTER INSERT,UPDATE,DELETE
AS 
EXEC msdb.dbo.sp_send_dbmail
@recipients ='sbprajapati979@gmail.com',
@body ='Dont Update Data',
@subject = 'Reminder'
GO

UPDATE Employees
SET Salary = Salary * 1.25

DROP TRIGGER reminder2
ALTER TRIGGER salaryinfo ON Employees
AFTER INSERT
AS 
IF(ROWCOUNT_BIG() = 0)
RETURN;
IF EXISTS(SELECT 1 FROM inserted AS I join Departments as DEP
ON DEP.DepartmentID = I.DepartmentID WHERE i.DepartmentID = 24)
BEGIN 
RAISERROR('Error is Occured',16,1);
ROLLBACK TRANSACTION ;
RETURN
END;
GO
SELECT * FROM Employees
SELECT * FROM AdventureWorks2019.HumanResources.Employee
INSERT Employees(EmployeeID,FirstName,LastName,Email,HireDate,JobId,Salary)
SELECT EMP.BusinessEntityID,VMP.FirstName,VMP.LastName,LEFT(VMP.EmailAddress,5)AS EMAIL,EMP.HireDate,RIGHT(EMP.JobTitle,4), CAST(EMP.SalariedFlag AS decimal(5,2)) FROM AdventureWorks2019.HumanResources.Employee AS EMP join AdventureWorks2019.HumanResources.vEmployee AS VMP
ON EMP.BusinessEntityID = VMP.BusinessEntityID
WHERE EMP.BusinessEntityID = '302'

sp_help Employees
SELECT DISTINCT DepartmentID  FROM Employees ORDER BY DepartmentID
--AVERAGE SALARY
CREATE TRIGGER AVGSALARY
on JOBS
FOR UPDATE
AS
UPDATE Jobs
SET MINSALARY = (MAXSALARY + MINSALARY)/2

UPDATE JOBS
SET MAXSALARY = MINSALARY *2

SELECT * FROM Jobs
DROP TRIGGER AVGSALARY

SELECT * FROM JOBS
--DELETE JOBS
--FOR
CREATE TRIGGER DELJOBS
ON JOBS 
FOR DELETE
AS
SELECT * FROM deleted
--AFTER
ALTER TRIGGER DELJOBS
ON JOBS 
AFTER DELETE
AS 
SELECT * FROM deleted
--INSTEAD OF
ALTER TRIGGER DELJOBS
ON JOBS 
INSTEAD OF DELETE
AS
SELECT * FROM Employees

select * from Jobs
delete from jobs where JobId = '200'
DROP TRIGGER DELJOBS
--INSERT JOBS
--FOR
CREATE TRIGGER INSJOBS
ON JOBS
FOR INSERT 
AS
SELECT * FROM inserted
--AFTER
ALTER TRIGGER INSJOBS
ON JOBS
AFTER INSERT 
AS
SELECT * FROM inserted

--INSTEAD OF
ALTER TRIGGER INSJOBS
ON JOBS
INSTEAD OF INSERT 
AS
SELECT * FROM inserted

--DROP TRIGGER INSJOBS

INSERT INTO Jobs VALUES
('201',  'MK_REP', '2000','29000')

--UPDATE JOBS
--FOR
CREATE TRIGGER UPDJOBS
ON JOBS
FOR UPDATE
AS
SELECT * FROM inserted

--AFTER
ALTER TRIGGER UPDJOBS
ON JOBS
AFTER UPDATE
AS
SELECT * FROM inserted

--INSTEAD OF
ALTER TRIGGER UPDJOBS
ON JOBS
INSTEAD OF UPDATE
AS
SELECT * FROM inserted

DROP TRIGGER UPDJOBS

UPDATE Jobs
SET MAXSALARY = MINSALARY * 2
--ROLLBACK
--FOR
CREATE TRIGGER ROLLBACKJOBS
ON JOBS
FOR INSERT,UPDATE,DELETE
AS
SELECT * FROM inserted
SELECT * FROM deleted
ROLLBACK

--AFTER
ALTER TRIGGER ROLLBACKJOBS
ON JOBS
AFTER INSERT,UPDATE,DELETE
AS
SELECT * FROM inserted
SELECT * FROM deleted
ROLLBACK

--INSTEAD OF
ALTER TRIGGER ROLLBACKJOBS
ON JOBS
INSTEAD OF INSERT,UPDATE,DELETE
AS
SELECT * FROM inserted
SELECT * FROM deleted
ROLLBACK
DROP TRIGGER ROLLBACKJOBS

SELECT * FROM Jobs
UPDATE Jobs
SET MAXSALARY = MINSALARY * 2

INSERT INTO Jobs VALUES
('204',  'MK_REP', '2000','29000')

delete from jobs where JobId = '201'

