
							--STRING FUNCTIONS

SELECT ASCII('c');
SELECT CHAR(68)
SELECT CHARINDEX('Available',Email) FROM employees
SELECT CONCAT(FirstName,LastName) FROM Employees
SELECT FORMAT(090909,'##-###-#') 
SELECT LEFT(FirstName,2) FROM Employees
SELECT RIGHT(LastName,3) FROM Employees
SELECT LEN(FirstName) FROM Employees
SELECT LOWER(FirstName) FROM Employees
SELECT LTRIM('     JOHN SMITH')
SELECT RTRIM('JOHN SMITH       ')
SELECT PATINDEX('%vail%',Email) FROM Employees
SELECT REPLACE(Email,'Not','Soon') FROM Employees
SELECT REPLICATE(FirstName,2) FROM Employees
SELECT REVERSE(FirstName) FROM Employees
SELECT SOUNDEX(FirstName) FROM Employees
SELECT STR(12.233243434,5,5)
SELECT STUFF(PhoneNumber,3,3,'111') FROM Employees
SELECT SUBSTRING(FirstName,2,4) FROM Employees
SELECT TRANSLATE('FirstName','First','Last_')
SELECT TRIM('.!,' FROM '.    JOHN             !,')
SELECT UNICODE(FirstName) FROM Employees



						--DateTime Function


SELECT CURRENT_TIMESTAMP;
SELECT DATEADD(MM,4,HireDate) FROM Employees;
SELECT DATEDIFF(MM,HireDate,GETDATE()) FROM Employees;
SELECT DATENAME(MM,HireDate)  FROM Employees;
SELECT DATEPART(MM,HireDate) FROM Employees;
SELECT DAY(HireDate) FROM Employees;
SELECT GETDATE();
SELECT GETUTCDATE() AS CoordinatedUniversalTime;
SELECT ISDATE('2000-02-15') AS CheckDateIsValidOrNot;
SELECT MONTH(HireDate) FROM Employees;
SELECT SYSDATETIME() AS SystemDateTime;
SELECT SYSDATETIMEOFFSET() AS WithTimeZoneOffset;
SELECT SYSUTCDATETIME() AS SystemUtcDateTime;
SELECT YEAR(HireDate) FROM Employees;



							--Maths Function--



SELECT CEILING(19.87);
SELECT EXP(4.5) AS ExponentialValue;
SELECT FLOOR(23.67);
SELECT POWER(2,3);
SELECT ROUND(34.5789,2);
SELECT ABS(-1.0), ABS(0.0), ABS(1.0)
--ACOS ( float_expression )  
SET NOCOUNT OFF;  
DECLARE @cos FLOAT;  
SET @cos = -1.0;  
SELECT 'The ACOS of the number is: ' + CONVERT(VARCHAR, ACOS(@cos));
--ASIN ( float_expression )  
DECLARE @angle FLOAT  
SET @angle = -1.01  
SELECT 'The ASIN of the angle is: ' + CONVERT(VARCHAR, ASIN(@angle))  
GO 
--ATAN ( float_expression )  
SELECT 'The ATAN of -45.01 is: ' + CONVERT(varchar, ATAN(-45.01))  
SELECT 'The ATAN of -181.01 is: ' + CONVERT(varchar, ATAN(-181.01)
--ATN2 ( float_expression , float_expression )  
--The following example calculates the ATN2 for the specified x and y components.
DECLARE @x FLOAT = 35.175643, @y FLOAT = 129.44;  
SELECT 'The ATN2 of the angle is: ' + CONVERT(VARCHAR, ATN2(@y, @x));  
GO  
--COS
--A mathematical function that returns the trigonometric cosine of the specified angle - measured in radians - in the specified expression.
DECLARE @angle FLOAT;  
SET @angle = 14.78;  
SELECT 'The COS of the angle is: ' + CONVERT(VARCHAR,COS(@angle));  
GO 
--SIN ( float_expression )  
DECLARE @angle FLOAT;  
SET @angle = 45.175643;  
SELECT 'The SIN of the angle is: ' + CONVERT(VARCHAR, SIN(@angle));  
GO 
--COT ( float_expression ) 
DECLARE @angle FLOAT;  
SET @angle = 124.1332;  
SELECT 'The COT of the angle is: ' + CONVERT(VARCHAR, COT(@angle));  
GO  
--DEGREES ( numeric_expression )
SELECT 'The number of degrees in PI/2 radians is: ' +   
CONVERT(VARCHAR, DEGREES((PI()/2)));  
GO  
--LOG ( float_expression [, base ] ) 
--Returns the natural logarithm of the specified float expression in SQL Server.
DECLARE @var FLOAT = 10;  
SELECT 'The LOG of the variable is: ' + CONVERT(VARCHAR, LOG(@var));  
GO
--LOG10 ( float_expression )
--Returns the base-10 logarithm of the specified float expression.
DECLARE @var FLOAT;  
SET @var = 145.175643;  
SELECT 'The LOG10 of the variable is: ' + CONVERT(VARCHAR,LOG10(@var));  
GO 
--PI()
--Returns the constant value of PI.
SELECT PI();  
GO 
--RADIANS ( numeric_expression )  
--Returns radians when a numeric expression, in degrees, is entered.
SELECT RADIANS(1e-307)  
GO
--RAND()
--The following example produces four different random numbers that are generated by the RAND function.
DECLARE @counter SMALLINT;  
SET @counter = 1;  
WHILE @counter < 5  
   BEGIN  
      SELECT RAND() Random_Number  
      SET @counter = @counter + 1  
   END;  
GO  
--SIGN ( numeric_expression )  
DECLARE @value REAL  
SET @value = -1  
WHILE @value < 2  
   BEGIN  
      SELECT SIGN(@value)  
      SET NOCOUNT ON  
      SELECT @value = @value + 1  
      SET NOCOUNT OFF  
   END  
SET NOCOUNT OFF  
GO  
--SQRT ( float_expression )
DECLARE @myvalue FLOAT;  
SET @myvalue = 1.00;  
WHILE @myvalue < 10.00  
   BEGIN  
      SELECT SQRT(@myvalue);  
      SET @myvalue = @myvalue + 1  
   END;  
GO  
--SQUARE ( float_expression )  
--Returns the square of the specified float value.
DECLARE @h FLOAT, @r FLOAT;  
SET @h = 5;  
SET @r = 1;  
SELECT PI()* SQUARE(@r)* @h AS 'Cyl Vol';  

--TAN ( float_expression )  
--Returns the tangent of the input expression.
SELECT TAN(PI()/2);  



						--System Function--



--Returns the error number for the last Transact-SQL statement executed.
SELECT @@ERROR
--Is a system function that returns the last-inserted identity value.
SELECT @@IDENTITY
--Returns the number of input packets read from the network by SQL Server since it was last started
SELECT @@PACK_RECEIVED
--Returns the number of rows affected by the last statement. 
SELECT @@ROWCOUNT
--Returns the number of BEGIN TRANSACTION statements that have occurred on the current connection.
SELECT @@TRANCOUNT
--For a request that comes in to the server, this function returns information about the connection properties of the unique connection which supports that request.
--!SELECT CONNECTIONPROPERTY(Property);
--For exact information about the current request, use CURRENT_REQUEST_ID().
SELECT CURRENT_REQUEST_ID();
--This function returns the transaction ID of the current transaction in the current session
SELECT CURRENT_TRANSACTION_ID();
--Returns the workstation identification number. The workstation identification number is the process ID (PID) of the application on the client computer that is connecting to SQL Server.
SELECT HOST_ID()
--Returns the workstation name.
SELECT HOST_NAME()
SELECT ISNULL(firstname,'JohnSmith') FROM Employees;
SELECT ISNUMERIC(Salary) FROM Employees;
--The following example uses NEWID() to assign a value to a variable declared as the uniqueidentifier data type.
SELECT NEWID();
SELECT ROWCOUNT_BIG()--Return type is big integer









