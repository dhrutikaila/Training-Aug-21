// <auto-generated />
using System;
using Hospital_Mange.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hospital_Mange.Migrations
{
    [DbContext(typeof(HOSPITALContext))]
    partial class HOSPITALContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:Collation", "Latin1_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Hospital_Mange.Models.Assistance", b =>
                {
                    b.Property<int>("AssistantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AssistantID")
                        .UseIdentityColumn();

                    b.Property<byte>("Age")
                        .HasColumnType("tinyint");

                    b.Property<string>("AssistantName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("DeptNo")
                        .HasColumnType("int");

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("AssistantId")
                        .HasName("PK__Healthca__3756F7502BCFE540");

                    b.HasIndex("DeptNo");

                    b.ToTable("HealthcareAssistants");
                });

            modelBuilder.Entity("Hospital_Mange.Models.Department", b =>
                {
                    b.Property<int>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DeptID")
                        .UseIdentityColumn();

                    b.Property<string>("DeptName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("DeptId")
                        .HasName("PK__Departme__0148818E0E67723E");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Hospital_Mange.Models.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DoctorID")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<byte>("Age")
                        .HasColumnType("tinyint");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("DoctorId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("Hospital_Mange.Models.Drug", b =>
                {
                    b.Property<int>("DrugsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DrugsID")
                        .UseIdentityColumn();

                    b.Property<string>("DrugDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DrugName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("date");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("DrugsId")
                        .HasName("PK__Drugs__96604F90B8D05331");

                    b.ToTable("Drugs");
                });

            modelBuilder.Entity("Hospital_Mange.Models.MedicineList", b =>
                {
                    b.Property<string>("MedicineList1")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)")
                        .HasColumnName("Medicine_list");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.ToView("Medicine_list");
                });

            modelBuilder.Entity("Hospital_Mange.Models.Object", b =>
                {
                    b.Property<int>("ObjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Obj_Id")
                        .UseIdentityColumn();

                    b.Property<string>("ObjName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Obj_Name");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("Type_Id");

                    b.HasKey("ObjId")
                        .HasName("PK__Object__2D8B34D56A0789F6");

                    b.HasIndex("TypeId");

                    b.ToTable("Object");
                });

            modelBuilder.Entity("Hospital_Mange.Models.ObjectMaster", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Type_Id")
                        .UseIdentityColumn();

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Type_Name");

                    b.HasKey("TypeId")
                        .HasName("PK__ObjectMa__FE90DD9E8E225B19");

                    b.ToTable("ObjectMaster");
                });

            modelBuilder.Entity("Hospital_Mange.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PatientID")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<byte>("Age")
                        .HasColumnType("tinyint");

                    b.Property<string>("BloodGroup")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Hospital_Mange.Models.PatientDoctor", b =>
                {
                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Doctor Name");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Patient Name");

                    b.ToView("Patients_Doctor");
                });

            modelBuilder.Entity("Hospital_Mange.Models.Prescription", b =>
                {
                    b.Property<int>("PreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PreID")
                        .UseIdentityColumn();

                    b.Property<byte>("DayPart")
                        .HasColumnType("tinyint");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("DoctorID");

                    b.Property<int>("DrugsId")
                        .HasColumnType("int")
                        .HasColumnName("DrugsID");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("PatientID");

                    b.Property<DateTime>("PreDate")
                        .HasColumnType("date");

                    b.HasKey("PreId")
                        .HasName("PK__Prescrip__7024C129B4A9EF0A");

                    b.HasIndex("DoctorId");

                    b.HasIndex("DrugsId");

                    b.HasIndex("PatientId");

                    b.ToTable("Prescription");
                });

            modelBuilder.Entity("Hospital_Mange.Models.Treatment", b =>
                {
                    b.Property<int>("TrtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TrtID")
                        .UseIdentityColumn();

                    b.Property<int>("DeptId")
                        .HasColumnType("int")
                        .HasColumnName("DeptID");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("DoctorID");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("PatientID");

                    b.Property<DateTime>("TrtDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("TrtId")
                        .HasName("PK__Treatmen__B8F3CCD1C2087D41");

                    b.HasIndex("DeptId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Treatment");
                });

            modelBuilder.Entity("Hospital_Mange.Models.Assistance", b =>
                {
                    b.HasOne("Hospital_Mange.Models.Department", "DeptNoNavigation")
                        .WithMany("HealthcareAssistants")
                        .HasForeignKey("DeptNo")
                        .HasConstraintName("FK_Dept");

                    b.Navigation("DeptNoNavigation");
                });

            modelBuilder.Entity("Hospital_Mange.Models.Object", b =>
                {
                    b.HasOne("Hospital_Mange.Models.ObjectMaster", "Type")
                        .WithMany("Objects")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_Type_Id")
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Hospital_Mange.Models.Prescription", b =>
                {
                    b.HasOne("Hospital_Mange.Models.Doctor", "Doctor")
                        .WithMany("Prescriptions")
                        .HasForeignKey("DoctorId")
                        .HasConstraintName("FK_DrID")
                        .IsRequired();

                    b.HasOne("Hospital_Mange.Models.Drug", "Drugs")
                        .WithMany("Prescriptions")
                        .HasForeignKey("DrugsId")
                        .HasConstraintName("FK_DrugId")
                        .IsRequired();

                    b.HasOne("Hospital_Mange.Models.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("FK_PatID")
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Drugs");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Hospital_Mange.Models.Treatment", b =>
                {
                    b.HasOne("Hospital_Mange.Models.Department", "Dept")
                        .WithMany("Treatments")
                        .HasForeignKey("DeptId")
                        .HasConstraintName("FK_DeptID")
                        .IsRequired();

                    b.HasOne("Hospital_Mange.Models.Doctor", "Doctor")
                        .WithMany("Treatments")
                        .HasForeignKey("DoctorId")
                        .HasConstraintName("FK_DoctorID")
                        .IsRequired();

                    b.HasOne("Hospital_Mange.Models.Patient", "Patient")
                        .WithMany("Treatments")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("FK_PatientID")
                        .IsRequired();

                    b.Navigation("Dept");

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Hospital_Mange.Models.Department", b =>
                {
                    b.Navigation("HealthcareAssistants");

                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("Hospital_Mange.Models.Doctor", b =>
                {
                    b.Navigation("Prescriptions");

                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("Hospital_Mange.Models.Drug", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("Hospital_Mange.Models.ObjectMaster", b =>
                {
                    b.Navigation("Objects");
                });

            modelBuilder.Entity("Hospital_Mange.Models.Patient", b =>
                {
                    b.Navigation("Prescriptions");

                    b.Navigation("Treatments");
                });
#pragma warning restore 612, 618
        }
    }
}
