// <auto-generated />
using System;
using EFAssignment_Day12.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFAssignment_Day12.Migrations
{
    [DbContext(typeof(ToyManufacturingContext))]
    partial class ToyManufacturingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFAssignment_Day12.Models.Addresses", b =>
                {
                    b.Property<int>("AdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustId")
                        .HasColumnType("int");

                    b.Property<int>("Pincode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdId");

                    b.HasIndex("CustId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("EFAssignment_Day12.Models.Customers", b =>
                {
                    b.Property<int>("CustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint");

                    b.HasKey("CustId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("EFAssignment_Day12.Models.ManufacturingPlant", b =>
                {
                    b.Property<int>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PlantName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlantId");

                    b.ToTable("ManufacturingPlants");
                });

            modelBuilder.Entity("EFAssignment_Day12.Models.OrderToys", b =>
                {
                    b.Property<int>("ToyId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("OrdersOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ToysToyId")
                        .HasColumnType("int");

                    b.HasKey("ToyId", "OrderId");

                    b.HasIndex("OrdersOrderId");

                    b.HasIndex("ToysToyId");

                    b.ToTable("OrderToys");
                });

            modelBuilder.Entity("EFAssignment_Day12.Models.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdId")
                        .HasColumnType("int");

                    b.Property<int?>("AddressesAdId")
                        .HasColumnType("int");

                    b.Property<int>("CustId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomersCustId")
                        .HasColumnType("int");

                    b.Property<int>("Items")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("OrderId");

                    b.HasIndex("AddressesAdId");

                    b.HasIndex("CustomersCustId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EFAssignment_Day12.Models.Toys", b =>
                {
                    b.Property<int>("ToyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<string>("ToyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ToyId");

                    b.HasIndex("PlantId");

                    b.ToTable("Toys");
                });

            modelBuilder.Entity("EFAssignment_Day12.Models.Addresses", b =>
                {
                    b.HasOne("EFAssignment_Day12.Models.Customers", "Customers")
                        .WithMany("Addresses")
                        .HasForeignKey("CustId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("EFAssignment_Day12.Models.OrderToys", b =>
                {
                    b.HasOne("EFAssignment_Day12.Models.Orders", "Orders")
                        .WithMany("OrderToys")
                        .HasForeignKey("OrdersOrderId");

                    b.HasOne("EFAssignment_Day12.Models.Toys", "Toys")
                        .WithMany("OrderToys")
                        .HasForeignKey("ToysToyId");

                    b.Navigation("Orders");

                    b.Navigation("Toys");
                });

            modelBuilder.Entity("EFAssignment_Day12.Models.Orders", b =>
                {
                    b.HasOne("EFAssignment_Day12.Models.Addresses", "Addresses")
                        .WithMany("Orders")
                        .HasForeignKey("AddressesAdId");

                    b.HasOne("EFAssignment_Day12.Models.Customers", "Customers")
                        .WithMany("Orders")
                        .HasForeignKey("CustomersCustId");

                    b.Navigation("Addresses");

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("EFAssignment_Day12.Models.Toys", b =>
                {
                    b.HasOne("EFAssignment_Day12.Models.ManufacturingPlant", "ManufacturingPlant")
                        .WithMany("Toys")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManufacturingPlant");
                });

            modelBuilder.Entity("EFAssignment_Day12.Models.Addresses", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EFAssignment_Day12.Models.Customers", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EFAssignment_Day12.Models.ManufacturingPlant", b =>
                {
                    b.Navigation("Toys");
                });

            modelBuilder.Entity("EFAssignment_Day12.Models.Orders", b =>
                {
                    b.Navigation("OrderToys");
                });

            modelBuilder.Entity("EFAssignment_Day12.Models.Toys", b =>
                {
                    b.Navigation("OrderToys");
                });
#pragma warning restore 612, 618
        }
    }
}
