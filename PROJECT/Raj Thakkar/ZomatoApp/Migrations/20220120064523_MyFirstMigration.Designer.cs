// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZomatoApp.DBContext;

namespace ZomatoApp.Migrations
{
    [DbContext(typeof(ZomatoApp_ProjectContext))]
    [Migration("20220120064523_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZomatoApp.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("productName");

                    b.Property<int>("ProductPrice")
                        .HasColumnType("int")
                        .HasColumnName("productPrice");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int")
                        .HasColumnName("productQuantity");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CartId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("ZomatoApp.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Category_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Category_Name");

                    b.Property<int>("ResId")
                        .HasColumnType("int")
                        .HasColumnName("Res_Id");

                    b.Property<string>("ResName")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .IsFixedLength(true);

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("ZomatoApp.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("CityId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("ZomatoApp.Models.OrderStatus", b =>
                {
                    b.Property<int>("Orderstatusid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Orderstauts")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.HasKey("Orderstatusid");

                    b.ToTable("OrderStatus");
                });

            modelBuilder.Entity("ZomatoApp.Models.Ordertable", b =>
                {
                    b.Property<int>("Orderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("orderid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Dates")
                        .HasColumnType("datetime")
                        .HasColumnName("dates");

                    b.Property<int>("Orderstats")
                        .HasColumnType("int");

                    b.Property<int>("Paymentid")
                        .HasColumnType("int");

                    b.HasKey("Orderid")
                        .HasName("PK__Ordertab__080E3775578830CC");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Orderstats");

                    b.HasIndex("Paymentid");

                    b.ToTable("Ordertable");
                });

            modelBuilder.Entity("ZomatoApp.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PaymentName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("PaymentId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("ZomatoApp.Models.Paymenttable", b =>
                {
                    b.Property<int>("Payid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("payid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cardName");

                    b.Property<string>("Cardcvv")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("cardcvv");

                    b.Property<string>("Cardnumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("cardnumber");

                    b.Property<int>("Orderid")
                        .HasColumnType("int")
                        .HasColumnName("orderid");

                    b.Property<int>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.HasKey("Payid")
                        .HasName("PK__paymentt__082D8EEB6B7BC8BD");

                    b.HasIndex("Orderid");

                    b.HasIndex("Userid");

                    b.ToTable("paymenttable");
                });

            modelBuilder.Entity("ZomatoApp.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Categoryid")
                        .HasColumnType("int");

                    b.Property<string>("ProductImage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Product_Image");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("money")
                        .HasColumnName("Product_Price");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ZomatoApp.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Offer1id")
                        .HasColumnType("int");

                    b.Property<int?>("Offer2id")
                        .HasColumnType("int");

                    b.Property<int?>("Payment1id")
                        .HasColumnType("int");

                    b.Property<int?>("Payment2id")
                        .HasColumnType("int");

                    b.Property<decimal>("RestFoodPricetwoperson")
                        .HasColumnType("money");

                    b.Property<string>("RestaurantCity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Restaurantfoodtype")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RestorentImage")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("RestaurantId");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("ZomatoApp.Models.UserSignup", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("User_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Emails")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Lpassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Options")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Phoneno")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("UserId")
                        .HasName("PK_UserSignupData");

                    b.ToTable("UserSignup");
                });

            modelBuilder.Entity("ZomatoApp.Models.ViewProduct", b =>
                {
                    b.Property<string>("ProductName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Product_Name");

                    b.Property<decimal?>("ProductPrice")
                        .HasColumnType("money")
                        .HasColumnName("Product_Price");

                    b.Property<string>("RestorentName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Restorent_Name");

                    b.ToView("VIEW_Product");
                });

            modelBuilder.Entity("ZomatoApp.Models.Ordertable", b =>
                {
                    b.HasOne("ZomatoApp.Models.UserSignup", "Customer")
                        .WithMany("Ordertables")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_userid")
                        .IsRequired();

                    b.HasOne("ZomatoApp.Models.OrderStatus", "OrderstatsNavigation")
                        .WithMany("Ordertables")
                        .HasForeignKey("Orderstats")
                        .HasConstraintName("FK_orderstatus")
                        .IsRequired();

                    b.HasOne("ZomatoApp.Models.Payment", "Payment")
                        .WithMany("Ordertables")
                        .HasForeignKey("Paymentid")
                        .HasConstraintName("FK_paymentdats")
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("OrderstatsNavigation");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("ZomatoApp.Models.Paymenttable", b =>
                {
                    b.HasOne("ZomatoApp.Models.Ordertable", "Order")
                        .WithMany("Paymenttables")
                        .HasForeignKey("Orderid")
                        .HasConstraintName("FK_orderSales")
                        .IsRequired();

                    b.HasOne("ZomatoApp.Models.UserSignup", "User")
                        .WithMany("Paymenttables")
                        .HasForeignKey("Userid")
                        .HasConstraintName("FK_TempSales")
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ZomatoApp.Models.OrderStatus", b =>
                {
                    b.Navigation("Ordertables");
                });

            modelBuilder.Entity("ZomatoApp.Models.Ordertable", b =>
                {
                    b.Navigation("Paymenttables");
                });

            modelBuilder.Entity("ZomatoApp.Models.Payment", b =>
                {
                    b.Navigation("Ordertables");
                });

            modelBuilder.Entity("ZomatoApp.Models.UserSignup", b =>
                {
                    b.Navigation("Ordertables");

                    b.Navigation("Paymenttables");
                });
#pragma warning restore 612, 618
        }
    }
}
